{"version":3,"sources":["components/MessagesBlock/MessagesBlock.module.scss","components/RoomsSidebar/RoomsSidebar.module.scss","store.js","Context.js","components/RoomsSidebar/AvatarComponent.js","components/RoomsSidebar/RoomsSidebar.js","components/MessagesBlock/Select.js","components/MessagesBlock/MessagesBlock.js","App.js","index.js"],"names":["module","exports","createStore","messages","pushMessage","obj","this","push","sortRoom","messagesArr","toJS","concat","roomArr","forEach","i","index","includes","roomId","removeIndex","indexOf","splice","sortArr","filter","mess","reverse","activeChat","setActiveChat","id","filterRecivedMessages","getActiveChat","map","m","recived","chanelFilter","setchanelFilter","getRoomMessages","channelId","Context","React","createContext","AppProvider","children","store","useLocalStore","Provider","value","useStore","useContext","useStyles","makeStyles","theme","root","display","margin","spacing","small","width","height","large","ImageAvatars","memo","classes","className","Avatar","alt","src","RoomsSidebar","useObserver","s","rooms__sidebar","rooms__sidebar__headline","rooms__sidebar__scrollbox","room","RoomCard","roomName","Object","keys","roomObj","values","messageLenght","length","sender","body","time","ts","toLocaleTimeString","slice","classNames","room__card","room__card__active","onClick","avatar","right__content","line1","msg__count","line2","name","text","formControl","minWidth","background","selectEmpty","font","fontSize","alignItems","paddingTop","paddingRight","borderBottom","marginTop","SimpleSelect","useState","age","setAge","Select","onChange","event","target","displayEmpty","inputProps","MenuItem","MessagesBlock","messages__block","MessagesWindow","scrollTo","useRef","useEffect","current","scrollIntoView","behavior","input","handleInputMessage","roomMsgs","submit","preventDefault","newMessage","nanoid","Date","messages__window","messages__window__head","messages__window__body","MessageLine","ms","ref","onSubmit","action","messages__window__footer","e","placeholder","type","roomMessages","channel","message__line","message__line__right","motion","div","message__box","initial","opacity","y","animate","transition","duration","Divider","divider","line","channelName","Svg","viewBox","fill","xmlns","d","require","loremIpsum","App","emit","init","roomIds","channelIds","message","roomid","randomChoose","count","randomBetween","format","units","setTimeout","min","max","Math","floor","random","array","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f4ab123.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__block\":\"MessagesBlock_messages__block__Hwiyw\",\"messages__window\":\"MessagesBlock_messages__window__3HdQc\",\"messages__window__head\":\"MessagesBlock_messages__window__head__1lbQe\",\"messages__window__body\":\"MessagesBlock_messages__window__body__3i7KN\",\"divider\":\"MessagesBlock_divider__32N5I\",\"line\":\"MessagesBlock_line__32Qtr\",\"channelName\":\"MessagesBlock_channelName__m_np6\",\"message__line\":\"MessagesBlock_message__line__2UhcT\",\"message__box\":\"MessagesBlock_message__box__3lXlI\",\"message__line__right\":\"MessagesBlock_message__line__right__1WDoq\",\"messages__window__footer\":\"MessagesBlock_messages__window__footer__SrjsI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rooms__sidebar\":\"RoomsSidebar_rooms__sidebar__2cyjg\",\"rooms__sidebar__headline\":\"RoomsSidebar_rooms__sidebar__headline__1Ed05\",\"rooms__sidebar__scrollbox\":\"RoomsSidebar_rooms__sidebar__scrollbox__3COQb\",\"room__card\":\"RoomsSidebar_room__card__VuMtV\",\"avatar\":\"RoomsSidebar_avatar__PsNNg\",\"right__content\":\"RoomsSidebar_right__content__3L--k\",\"line1\":\"RoomsSidebar_line1__30AsE\",\"msg__count\":\"RoomsSidebar_msg__count__3IBfW\",\"time\":\"RoomsSidebar_time__1iUBA\",\"line2\":\"RoomsSidebar_line2__1LHMT\",\"name\":\"RoomsSidebar_name__ydu3D\",\"text\":\"RoomsSidebar_text__2BuzN\",\"room__card__active\":\"RoomsSidebar_room__card__active__3kdiT\"};","\r\nimport { toJS } from 'mobx'\r\n\r\nexport function createStore() {\r\n  return {\r\n    messages: [],\r\n    // messages: arr,\r\n    pushMessage(obj) {\r\n      this.messages.push(obj)\r\n    },\r\n    sortRoom() {\r\n      const messagesArr = toJS(this.messages).concat()\r\n      const roomArr = []\r\n      messagesArr.forEach((i, index) => {\r\n        if (roomArr.includes(i.roomId)) {\r\n          const removeIndex = roomArr.indexOf(i.roomId)\r\n          roomArr.splice(removeIndex, 1)\r\n        }\r\n        roomArr.push(i.roomId)\r\n      })\r\n      const sortArr = []\r\n      roomArr.forEach(i => {\r\n        sortArr.push({ [i]: messagesArr.filter(mess => mess.roomId === i) })\r\n      })\r\n      return sortArr.reverse()\r\n    },\r\n\r\n    activeChat: null,\r\n    // activeChat: 'Tyler Durden',\r\n    setActiveChat(id) {\r\n      this.activeChat = id\r\n      // this.messages = this.messages.map(m=> m.roomId === id ?   { ...m, recived : true} : m )\r\n      this.filterRecivedMessages()\r\n      \r\n    },\r\n    getActiveChat() {\r\n      return this.activeChat\r\n    },\r\n\r\n    filterRecivedMessages(){\r\n              this.messages = this.messages.map(m=> m.roomId === this.activeChat ?   { ...m, recived : true} : m )\r\n    },\r\n\r\n    chanelFilter: '',\r\n\r\n    setchanelFilter(filter){\r\n      this.chanelFilter = filter\r\n    },\r\n    \r\n\r\n    getRoomMessages() {\r\n      const messagesArr = toJS(this.messages).concat()\r\n   \r\n      if(this.chanelFilter !== ''){\r\n        return messagesArr.filter(mess => mess.roomId === this.activeChat).filter(mess=> mess.channelId === this.chanelFilter)\r\n      }\r\n      return messagesArr.filter(mess => mess.roomId === this.activeChat)\r\n    },\r\n \r\n  }\r\n}\r\n\r\n\r\n\r\nconst arr = [\r\n\r\n  {\r\n    id: 1,\r\n    roomId: 'Dr. Heinz Doofenshmirtz',\r\n    channelId: 'FB',\r\n    body: 'nisi ea ut',\r\n    ts: \"2021-03-30T19:17:54.195Z\"\r\n  },\r\n  {\r\n    id: 2,\r\n    roomId: 'Dr. Heinz Doofenshmirtz',\r\n    channelId: 'FB',\r\n    body: 'tempor ex aute nostrud',\r\n    ts: \"2021-03-30T19:17:57.837Z\"\r\n  },\r\n  {\r\n    id: 3,\r\n    roomId: 'Gregory',\r\n    channelId: 'VK',\r\n    body: 'exercitation laborum minim',\r\n    ts: \"2021-03-30T19:18:01.542Z\"\r\n  },\r\n  {\r\n    id: 4,\r\n    roomId: 'Perry the Platypus',\r\n    channelId: 'VK',\r\n    body: 'Enim ad consectetur nulla dolore eiusmod velit voluptate mollit voluptate pariatur. Id tempor culpa qui cillum duis occaecat veniam. Ipsum labore eiusmod dolor aliqua ad velit aliquip. Mollit mollit magna labore dolore laborum cupidatat. Do amet fugiat occaecat non.',\r\n    ts: \"2021-03-30T19:18:06.032Z\"\r\n  },\r\n  {\r\n    id: 5,\r\n    roomId: 'Gregory',\r\n    channelId: 'FB',\r\n    body: 'velit',\r\n    ts: \"2021-03-30T19:18:10.586Z\"\r\n  },\r\n  {\r\n    id: 6,\r\n    roomId: 'Dr. Heinz Doofenshmirtz',\r\n    channelId: 'FB',\r\n    body: 'Pariatur reprehenderit nisi duis voluptate fugiat excepteur eu est exercitation.',\r\n    ts: \"2021-03-30T19:18:15.511Z\"\r\n  },\r\n  {\r\n    id: 7,\r\n    roomId: 'Dr. Heinz Doofenshmirtz',\r\n    channelId: 'OK',\r\n    body: 'ipsum occaecat non sint',\r\n    ts: \"2021-03-30T19:18:19.775Z\"\r\n  },\r\n  {\r\n    id: 8,\r\n    roomId: 'Tyler Durden',\r\n    channelId: 'FB',\r\n    body: 'ullamco',\r\n    ts: \"2021-03-30T19:18:23.816Z\"\r\n  },\r\n  {\r\n    id: 9,\r\n    roomId: 'Perry the Platypus',\r\n    channelId: 'OK',\r\n    body: 'Voluptate irure id sunt aute magna ut laborum Lorem. Eiusmod laboris ex reprehenderit adipisicing ullamco reprehenderit. Ipsum est esse et amet dolore esse anim tempor tempor sit. Culpa ea fugiat aliquip dolor sit tempor elit irure in incididunt sint nulla reprehenderit.',\r\n    ts: \"2021-03-30T19:18:27.349Z\"\r\n  },\r\n  {\r\n    id: 10,\r\n    roomId: 'Amy Pond',\r\n    channelId: 'FB',\r\n    body: 'incididunt',\r\n    ts: \"2021-03-30T19:18:31.607Z\"\r\n  },\r\n  {\r\n    id: 11,\r\n    roomId: 'Amy Pond',\r\n    channelId: 'OK',\r\n    body: 'dolore',\r\n    ts: \"2021-03-30T19:18:35.169Z\"\r\n  },\r\n  {\r\n    id: 12,\r\n    roomId: 'Tyler Durden',\r\n    channelId: 'VK',\r\n    body: 'Ex aute ea est pariatur sit sunt culpa dolor Lorem do non adipisicing fugiat.',\r\n    ts: \"2021-03-30T19:18:39.775Z\"\r\n  },\r\n  {\r\n    id: 13,\r\n    roomId: 'Gregory',\r\n    channelId: 'VK',\r\n    body: 'Adipisicing laborum Lorem non non fugiat consequat velit laborum excepteur labore est amet.',\r\n    ts: \"2021-03-30T19:18:44.077Z\"\r\n  },\r\n  {\r\n    id: 14,\r\n    roomId: 'Perry the Platypus',\r\n    channelId: 'FB',\r\n    body: 'Minim officia labore laboris ad incididunt sit consequat occaecat eu adipisicing laborum. Nulla veniam sint commodo officia pariatur exercitation proident nulla adipisicing minim. Commodo ut commodo amet consequat irure excepteur Lorem voluptate reprehenderit quis ullamco quis laborum. Sint veniam ullamco veniam adipisicing aliquip excepteur sint commodo et. Ad incididunt labore enim do ea occaecat consectetur amet minim excepteur quis pariatur esse eu.',\r\n    ts: ' 2021-03-30T19:18:47.853Z'\r\n  },\r\n  {\r\n    id: 15,\r\n    roomId: 'Amy Pond',\r\n    channelId: 'FB',\r\n    body: 'dolore cillum sunt mollit',\r\n    ts: \"2021-03-30T19:18:52.302Z\"\r\n  },\r\n  {\r\n    id: 16,\r\n    roomId: 'Gregory',\r\n    channelId: 'VK',\r\n    body: 'occaecat laborum',\r\n    ts: \"2021-03-30T19:18:55.521Z\"\r\n  },\r\n  {\r\n    id: 17,\r\n    roomId: 'Tyler Durden',\r\n    channelId: 'OK',\r\n    body: 'aute culpa sint',\r\n    ts: \"2021-03-30T19:19:00.479Z\"\r\n  },\r\n  {\r\n    id: 18,\r\n    roomId: 'Tyler Durden',\r\n    channelId: 'OK',\r\n    body: 'ex',\r\n    ts: \"2021-03-30T19:19:05.043Z\"\r\n  },\r\n  {\r\n    id: 19,\r\n    roomId: 'Dr. Heinz Doofenshmirtz',\r\n    channelId: 'OK',\r\n    body: 'sit culpa',\r\n    ts: \"2021-03-30T19:19:10.050Z\"\r\n  },\r\n  {\r\n    id: 20,\r\n    roomId: 'Tyler Durden',\r\n    channelId: 'FB',\r\n    body: 'Aliquip amet consequat dolor occaecat.',\r\n    ts: \"2021-03-30T19:19:13.803Z\"\r\n  },\r\n  {\r\n    id: 21,\r\n    roomId: 'Tyler Durden',\r\n    channelId: 'FB',\r\n    body: 'ipsum nisi veniam',\r\n    ts: \"2021-03-30T19:19:18.224Z\"\r\n  }\r\n\r\n]","import React from 'react'\r\n\r\nimport {createStore} from './store'\r\nimport {useLocalStore} from 'mobx-react'\r\n\r\nconst Context = React.createContext(null)\r\n\r\nexport const AppProvider  = ({children})=>{\r\n    const store = useLocalStore( createStore) \r\n    return (\r\n        <Context.Provider value = {store}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport const  useStore  = ()=> React.useContext( Context)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n}));\r\n\r\n const ImageAvatars = React.memo(function() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Avatar alt=\"Remy Sharp\" src=\"\" className={classes.small} />\r\n\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default ImageAvatars","import React from 'react'\r\nimport s from './RoomsSidebar.module.scss'\r\nimport IconAvatars from './AvatarComponent'\r\nimport { useStore } from '../../Context'\r\nimport { useObserver } from \"mobx-react\";\r\n// import { toJS } from 'mobx'\r\nimport classNames from 'classnames'\r\n\r\n\r\n\r\n\r\nconst RoomsSidebar = React.memo(function () {\r\n    const store = useStore()\r\n\r\n\r\n\r\n    return useObserver(() => (\r\n        <div className={s.rooms__sidebar}>\r\n            <div className={s.rooms__sidebar__headline}>Perry the Platypus</div>\r\n            <div className={s.rooms__sidebar__scrollbox}>\r\n                {\r\n                    store.sortRoom().map((room, index) => {\r\n                        return (\r\n                            <RoomCard key={index} room={room} />\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    ))\r\n})\r\n\r\nexport default RoomsSidebar;\r\n\r\n\r\n\r\n\r\nconst RoomCard = React.memo(function ({ room }) {\r\n\r\n    const store = useStore()\r\n\r\n    const roomName = Object.keys(room)[0]\r\n    const roomNameSlice = function () {\r\n\r\n        if (roomName.length > 14) {\r\n            return `${roomName.slice(0, 15)}...`\r\n        } else {\r\n            return roomName\r\n        }\r\n    }\r\n\r\n    const roomObj = Object.values(room)\r\n    const messageLenght = roomObj[0].filter(i => i.recived === false).length\r\n    const { roomId, sender,  body, ts } = roomObj[0][roomObj[0].length - 1]\r\n    const time = ts.toLocaleTimeString().slice(0, -3)\r\n    const messageSlice = function () {\r\n        if (body.length > 35) {\r\n            return `${body.slice(0, 30)}...`\r\n        } else {\r\n            return body\r\n        }\r\n    }\r\n\r\n    return useObserver(() => (\r\n        <div className={classNames(\r\n            s.room__card,\r\n            { [s.room__card__active]: roomId === store.getActiveChat() },\r\n        )}\r\n            onClick={() => store.setActiveChat(roomId)}>\r\n            <div className={s.avatar}>\r\n                <IconAvatars />\r\n            </div>\r\n            <div className={s.right__content}>\r\n                <div className={s.line1}>\r\n                    <h6>{roomNameSlice()}</h6>\r\n                    <div>\r\n                        <div className={s.msg__count}>{messageLenght}</div>\r\n                        <div className={s.time}>{time}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.line2}>\r\n                    <span>\r\n                        <span className={s.name}>{sender} - </span>\r\n                        <span className={s.text}>{messageSlice()}</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    ))\r\n})\r\n","// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import Select from '@material-ui/core/Select';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     formControl: {\r\n//         margin: theme.spacing(1),\r\n//         background: \"#fff\",\r\n//         // borderBottom: 'none',\r\n//         // border: \"3px solid red\",\r\n//         // outline: 'none'\r\n//         minWidth: 120,\r\n//     },\r\n//     selectEmpty: {\r\n//         border: \"3px solid red\",\r\n//         // marginTop: theme.spacing(2),\r\n//     },\r\n\r\n// }));\r\n\r\n// export default function SimpleSelect() {\r\n//     const classes = useStyles();\r\n//     const [age, setAge] = React.useState('');\r\n\r\n//     const handleChange = (event) => {\r\n//         setAge(event.target.value);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n\r\n//             <FormControl\r\n//                 className={`${classes.formControl} `}\r\n//             >\r\n//                 <Select\r\n//                     value={age}\r\n//                     onChange={handleChange}\r\n//                     displayEmpty\r\n//                     //   className={classes.selectEmpty}\r\n//                     inputProps={{ 'aria-label': 'Without label' }}\r\n//                 >\r\n//                     {/* <MenuItem value=\"\" disabled>\r\n//             Placeholder\r\n//           </MenuItem> */}\r\n//                     <MenuItem value={10} default>Ten</MenuItem>\r\n//                     <MenuItem value={20}>Twenty</MenuItem>\r\n//                     <MenuItem value={30}>Thirty</MenuItem>\r\n//                 </Select>\r\n//             </FormControl>\r\n\r\n\r\n//         </>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useStore } from '../../Context'\r\nimport s from './MessagesBlock.module.scss'\r\n// import MessagesBlock from './MessagesBlock';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: 220,\r\n    background: \"#fff\",\r\n    // fontSize: '5px'\r\n  },\r\n  selectEmpty: {\r\n    font :'Roboto',\r\n    fontSize: '14px',\r\n    background: \"#fff\",\r\n    height: '43px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: '8px',\r\n    paddingRight: '10px',\r\n    borderBottom: \"5px solid white\",\r\n\r\n\r\n    marginTop: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\nconst store = useStore()\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    store.setchanelFilter(event.target.value)\r\n  };\r\n\r\n  return (\r\n    <>\r\n   \r\n        \r\n        <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          className={classes.selectEmpty }\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem value={''} >ALL CHANNELS</MenuItem>\r\n          <MenuItem value={'VK'}>VK</MenuItem>\r\n          <MenuItem value={'FB'}>FB</MenuItem>\r\n          <MenuItem value={'OK'}>OK</MenuItem>\r\n        </Select>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\nimport s from './MessagesBlock.module.scss'\r\nimport SimpleSelect from './Select'\r\nimport { useStore } from '../../Context'\r\nimport { useObserver } from \"mobx-react\";\r\nimport { motion } from 'framer-motion';\r\nimport { nanoid } from 'nanoid'\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst MessagesBlock = React.memo(function () {\r\n    const store = useStore()\r\n\r\n    return useObserver(() => (\r\n\r\n        <div className={s.messages__block}>\r\n            {\r\n                store.activeChat === null\r\n                    ? <>Choose a chat</>\r\n                    : <MessagesWindow />\r\n            }\r\n        </div>\r\n    ))\r\n})\r\n\r\nexport default MessagesBlock\r\n\r\n\r\nconst MessagesWindow = React.memo(function () {\r\n\r\n    const store = useStore()\r\n    const scrollTo = React.useRef()\r\n\r\n    React.useEffect(() => {\r\n        scrollTo.current.scrollIntoView({ behavior: \"smooth\" })\r\n\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        store.filterRecivedMessages()\r\n        return () => store.filterRecivedMessages()\r\n\r\n    }, [store.messages.length])\r\n\r\n    const [input, handleInputMessage] = React.useState('')\r\n    const roomMsgs = store.messages.filter(i => i.roomId === store.activeChat)\r\n\r\n    const submit = (event) => {\r\n        event.preventDefault();\r\n        const newMessage = {\r\n            id: nanoid(),\r\n            roomId: store.activeChat,\r\n            channelId: store.chanelFilter || roomMsgs[roomMsgs.length - 1].channelId,\r\n            sender: 'You',\r\n            body: input,\r\n            ts: new Date(),\r\n        }\r\n        handleInputMessage('')\r\n        store.pushMessage(newMessage)\r\n    }\r\n\r\n    return useObserver(() => (\r\n\r\n        <div className={s.messages__window}>\r\n            <div className={s.messages__window__head}>\r\n                <span>{store.activeChat}</span>\r\n                <SimpleSelect />\r\n            </div>\r\n\r\n            <div className={s.messages__window__body}>\r\n                {\r\n                    store.getRoomMessages().map((i, index) => <MessageLine key={i.id} ms={i} index={index} />)\r\n                }\r\n                <span ref={scrollTo}></span>\r\n            </div>\r\n            <form onSubmit={submit} action=\"\" className={s.messages__window__footer}>\r\n                <input onChange={(e) => handleInputMessage(e.target.value)} placeholder='Введите текст' value={input} type=\"text\" />\r\n                <button onClick={submit}>\r\n                    <Svg />\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    ))\r\n})\r\n\r\n\r\n\r\nconst MessageLine = React.memo(({ ms, index }) => {\r\n    const store = useStore()\r\n    const time = ms.ts.toLocaleTimeString().slice(0, -3)\r\n    const roomMessages = store.getRoomMessages()\r\n\r\n    const roomChannels = () => {\r\n        if (index >= 1) {\r\n            return roomMessages[index].channelId === roomMessages[index - 1].channelId ? true : false\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    return useObserver(() => (\r\n        <>\r\n            {\r\n                !roomChannels() && <Divider channel={ms.channelId} />\r\n            }\r\n\r\n            <div className={classNames(\r\n                s.message__line,\r\n                { [s.message__line__right]: ms.sender === 'You' },\r\n            )}>\r\n                <motion.div\r\n                    className={s.message__box}\r\n                    initial={{ opacity: 0, y: '10%' }} animate={{ opacity: 1, y: '0', transition: { duration: 0.5 } }}>\r\n                    {/* <p>ChannelId : {ms.channelId}</p> */}\r\n                    <p>{ms.body}</p>\r\n                    <span>{time}</span>\r\n                </motion.div>\r\n\r\n            </div>\r\n        </>\r\n    ))\r\n})\r\n\r\nconst Divider = ({ channel }) => {\r\n\r\n    return (\r\n        <div className={s.divider}>\r\n            <span className={s.line}></span>\r\n            <span className={s.channelName}>{channel}</span>\r\n            <span className={s.line}></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Svg = () => {\r\n    return (\r\n        <svg width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M1.4 16.8849L18.85 9.40488C19.66 9.05488 19.66 7.91488 18.85 7.56488L1.4 0.0848801C0.74 -0.20512 0.00999999 0.28488 0.00999999 0.99488L0 5.60488C0 6.10488 0.37 6.53488 0.87 6.59488L15 8.48488L0.87 10.3649C0.37 10.4349 0 10.8649 0 11.3649L0.00999999 15.9749C0.00999999 16.6849 0.74 17.1749 1.4 16.8849Z\" fill=\"#083DCC\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\n","import React from 'react'\nimport './App.scss';\nimport { useStore } from './Context';\nimport { useObserver } from 'mobx-react'\nimport RoomsSidebar from './components/RoomsSidebar/RoomsSidebar';\nimport MessagesBlock from './components/MessagesBlock/MessagesBlock';\nconst loremIpsum = require('lorem-ipsum').loremIpsum;\n\n\nfunction App() {\n\n  const store = useStore()\n\n  React.useEffect(() => {\n    emit()\n  }, [])\n\n\n  const loremIpsum = require('lorem-ipsum').loremIpsum;\n  let init = true;\n  let id = 0;\n  const roomIds = ['Perry the Platypus', 'Tyler Durden', 'Amy Pond', 'Le Petit Prince', 'Dr. Heinz Doofenshmirtz', 'Gregory'];\n  const channelIds = ['VK', 'OK', 'FB'];\n\n  // emit();\n\n  function emit() {\n    // console.log('this', this);\n    let roomid = randomChoose(roomIds)\n    if (init) {\n      init = false;\n    } else {\n      handle({\n        id: ++id,\n        roomId: roomid ,\n        channelId: randomChoose(channelIds),\n        sender:  roomid,\n        recived: false,\n        body: loremIpsum({\n          count: randomBetween(1, 5),\n          format: 'plain',\n          units: randomChoose(['sentences', 'words']),\n        }),\n        ts: new Date(),\n      });\n    }\n    setTimeout(emit, randomBetween(3000, 6000));\n  }\n// console.log(this);\n\n  function randomBetween(min, max) {\n    return Math.floor((max - min + 1) * Math.random()) + min;\n  }\n\n  function randomChoose(array) {\n    return array[randomBetween(0, array.length - 1)];\n  }\n\n  function handle(message) {\n    // FIXME Your code goes here\n    // console.log(message);\n    store.pushMessage(message)\n  }\n\n\n\n  return useObserver(() => (\n    <div className='App'>\n      <RoomsSidebar />\n      <MessagesBlock />\n    </div>\n\n  ));\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { AppProvider } from './Context';\n\nReactDOM.render(\n    <AppProvider>\n\n      <App />\n    </AppProvider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}