{"version":3,"sources":["components/MessagesBlock/MessagesBlock.module.scss","components/RoomsSidebar/RoomsSidebar.module.scss","store.js","Context.js","components/RoomsSidebar/AvatarComponent.js","components/RoomsSidebar/RoomCard.js","components/RoomsSidebar/RoomsSidebar.js","components/MessagesBlock/Select.js","components/MessagesBlock/MessagesLine.js","components/MessagesBlock/MessagesBlock.js","App.js","index.js"],"names":["module","exports","createStore","messages","pushMessage","obj","this","push","getMessages","getRooms","messagesArr","toJS","concat","roomsNamesArr","roomsObjectsArr","forEach","message","index","includes","roomId","removeIndex","indexOf","splice","reverse","activeChat","setActiveChat","id","filterRecivedMessages","getActiveChat","map","m","recived","notRecivedMessagesCount","filter","i","length","channelFilter","setchannelFilter","getRoomMessages","mess","channelId","Context","React","createContext","AppProvider","children","store","useLocalStore","Provider","value","useStore","useContext","useStyles","makeStyles","theme","root","display","margin","spacing","small","width","height","large","ImageAvatars","memo","classes","className","Avatar","alt","src","badge","marginRight","actionArea","justifyContent","alignItems","RoomCard","room","sender","body","ts","messageLenght","time","toLocaleTimeString","slice","useObserver","Card","classNames","s","room__card","room__card__active","onClick","CardActionArea","avatar","right__content","line1","Badge","badgeContent","color","line2","name","text","RoomsSidebar","rooms__sidebar","rooms__sidebar__headline","rooms__sidebar__scrollbox","formControl","minWidth","background","selectEmpty","font","fontSize","paddingTop","paddingRight","borderBottom","marginTop","SimpleSelect","useState","age","setAge","Select","onChange","event","target","displayEmpty","inputProps","MenuItem","MessageLine","ms","roomMessages","channel","message__line","message__line__right","motion","div","message__box","initial","opacity","y","animate","transition","duration","Divider","divider","line","channelName","MessagesBlock","messages__block","MessagesWindow","scrollTo","useRef","useEffect","current","scrollIntoView","behavior","input","handleInputMessage","roomMsgs","submit","preventDefault","newMessage","nanoid","Date","messages__window","messages__window__head","messages__window__body","ref","onSubmit","action","messages__window__footer","e","placeholder","type","Svg","viewBox","fill","xmlns","d","loremIpsum","require","App","emit","init","roomIds","channelIds","roomid","randomChoose","count","randomBetween","format","units","setTimeout","min","max","Math","floor","random","array","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a04580a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__block\":\"MessagesBlock_messages__block__Hwiyw\",\"messages__window\":\"MessagesBlock_messages__window__3HdQc\",\"messages__window__head\":\"MessagesBlock_messages__window__head__1lbQe\",\"messages__window__body\":\"MessagesBlock_messages__window__body__3i7KN\",\"divider\":\"MessagesBlock_divider__32N5I\",\"line\":\"MessagesBlock_line__32Qtr\",\"channelName\":\"MessagesBlock_channelName__m_np6\",\"message__line\":\"MessagesBlock_message__line__2UhcT\",\"message__box\":\"MessagesBlock_message__box__3lXlI\",\"message__line__right\":\"MessagesBlock_message__line__right__1WDoq\",\"messages__window__footer\":\"MessagesBlock_messages__window__footer__SrjsI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rooms__sidebar\":\"RoomsSidebar_rooms__sidebar__2cyjg\",\"rooms__sidebar__headline\":\"RoomsSidebar_rooms__sidebar__headline__1Ed05\",\"rooms__sidebar__scrollbox\":\"RoomsSidebar_rooms__sidebar__scrollbox__3COQb\",\"room__card\":\"RoomsSidebar_room__card__VuMtV\",\"avatar\":\"RoomsSidebar_avatar__PsNNg\",\"right__content\":\"RoomsSidebar_right__content__3L--k\",\"line1\":\"RoomsSidebar_line1__30AsE\",\"time\":\"RoomsSidebar_time__1iUBA\",\"line2\":\"RoomsSidebar_line2__1LHMT\",\"name\":\"RoomsSidebar_name__ydu3D\",\"text\":\"RoomsSidebar_text__2BuzN\",\"room__card__active\":\"RoomsSidebar_room__card__active__3kdiT\"};","\r\nimport { toJS } from 'mobx'\r\n\r\nexport function createStore() {\r\n  return {\r\n    messages: [],\r\n\r\n    pushMessage(obj) {\r\n      this.messages.push(obj)\r\n    },\r\n\r\n    getMessages(){\r\n      return this.messages\r\n    },\r\n\r\n    getRooms(){\r\n      const messagesArr = toJS(this.messages).concat()\r\n      const roomsNamesArr = []\r\n      const roomsObjectsArr = []\r\n\r\n      messagesArr.forEach((message, index) => {\r\n        if (roomsNamesArr.includes(message.roomId)) {\r\n          const removeIndex = roomsNamesArr.indexOf(message.roomId)\r\n          roomsNamesArr.splice(removeIndex, 1)\r\n          roomsObjectsArr.splice(removeIndex, 1)\r\n        }\r\n        roomsNamesArr.push(message.roomId)\r\n        roomsObjectsArr.push(message)\r\n      })\r\n      return roomsObjectsArr.reverse()\r\n      \r\n    }, \r\n\r\n    activeChat: null,\r\n\r\n    setActiveChat(id) {\r\n      this.activeChat = id\r\n      this.filterRecivedMessages()\r\n\r\n    },\r\n    getActiveChat() {\r\n      return this.activeChat\r\n    },\r\n\r\n    filterRecivedMessages() {\r\n      this.messages = this.messages.map(m => {\r\n        return (\r\n          m.roomId === this.activeChat\r\n            ? { ...m, recived: true }\r\n            : m\r\n        )\r\n      })\r\n    },\r\n\r\n    notRecivedMessagesCount(roomId){\r\n      return this.messages.filter(i => i.roomId === roomId && i.recived === false).length\r\n    },\r\n\r\n\r\n    channelFilter: '',\r\n\r\n    setchannelFilter(filter) {\r\n      this.channelFilter = filter\r\n    },\r\n\r\n\r\n    getRoomMessages() {\r\n      const messagesArr = toJS(this.messages).concat()\r\n\r\n      if (this.channelFilter !== '') {\r\n        return (\r\n          messagesArr.filter(mess => mess.roomId === this.activeChat)\r\n                     .filter(mess => mess.channelId === this.channelFilter)\r\n        )\r\n      }\r\n      return messagesArr.filter(mess => mess.roomId === this.activeChat)\r\n    },\r\n\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport {createStore} from './store'\r\nimport {useLocalStore} from 'mobx-react'\r\n\r\nconst Context = React.createContext(null)\r\n\r\nexport const AppProvider  = ({children})=>{\r\n    const store = useLocalStore( createStore) \r\n    return (\r\n        <Context.Provider value = {store}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport const  useStore  = ()=> React.useContext( Context)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n}));\r\n\r\n const ImageAvatars = React.memo(function() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Avatar alt=\"Remy Sharp\" src=\"\" className={classes.small} />\r\n\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default ImageAvatars","import React from 'react'\r\nimport s from './RoomsSidebar.module.scss'\r\nimport IconAvatars from './AvatarComponent'\r\nimport { useStore } from '../../Context'\r\nimport { useObserver } from \"mobx-react\";\r\nimport classNames from 'classnames'\r\nimport { Badge, Card, makeStyles, CardActionArea } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    badge: {\r\n        marginRight: '10px',\r\n    },\r\n    actionArea: {\r\n        display: 'flex', \r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n\r\n}))\r\n\r\nconst RoomCard = React.memo(function ({ room }) {\r\n\r\n    const store = useStore()\r\n    const classes = useStyles()\r\n\r\n    const { roomId, sender, body, ts } = room\r\n\r\n    const roomNameSlice = function () {\r\n        if (roomId.length > 14) {\r\n            return `${roomId.slice(0, 15)}...`\r\n        } else {\r\n            return roomId\r\n        }\r\n    }\r\n\r\n    const messageLenght = store.notRecivedMessagesCount(roomId)\r\n    const time = ts.toLocaleTimeString().slice(0, -3)\r\n\r\n    const messageSlice = function () {\r\n        if (body.length > 35) {\r\n            return `${body.slice(0, 30)}...`\r\n        } else {\r\n            return body\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return useObserver(() => (\r\n\r\n        <Card\r\n            className={classNames(\r\n                s.room__card,\r\n                { [s.room__card__active]: roomId === store.getActiveChat() },\r\n            )}\r\n            onClick={() => store.setActiveChat(roomId)}>\r\n            <CardActionArea className={classes.actionArea}>\r\n                <div className={s.avatar}>\r\n                    <IconAvatars />\r\n                </div>\r\n                <div className={s.right__content}>     \r\n                    <div className={s.line1}>\r\n                        <h6>{roomNameSlice()}</h6>\r\n\r\n                        <div>\r\n                            <Badge className={classes.badge} badgeContent={messageLenght} color=\"primary\" />\r\n                            <div className={s.time}>{time}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.line2}>\r\n                        <div>\r\n                            <span className={s.name}>{sender} - </span>\r\n                            <span className={s.text}>{messageSlice()}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </CardActionArea>\r\n        </Card>\r\n    ))\r\n})\r\n\r\nexport default RoomCard\r\n\r\n\r\n","import React from 'react'\r\nimport s from './RoomsSidebar.module.scss'\r\nimport { useStore } from '../../Context'\r\nimport { useObserver } from \"mobx-react\";\r\n\r\nimport RoomCard from './RoomCard'\r\n\r\n\r\n\r\nconst RoomsSidebar = React.memo(function () {\r\n\r\n    const store = useStore()\r\n    \r\n    return useObserver(() => (\r\n\r\n        <div className={s.rooms__sidebar}>\r\n            <div className={s.rooms__sidebar__headline}>You</div>\r\n            <div className={s.rooms__sidebar__scrollbox}>\r\n                {\r\n                    store.getRooms().map((room, index) => {\r\n                        return (\r\n                            <RoomCard key={index} room={room} />\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    ))\r\n})\r\n\r\nexport default RoomsSidebar;\r\n","// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import Select from '@material-ui/core/Select';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     formControl: {\r\n//         margin: theme.spacing(1),\r\n//         background: \"#fff\",\r\n//         // borderBottom: 'none',\r\n//         // border: \"3px solid red\",\r\n//         // outline: 'none'\r\n//         minWidth: 120,\r\n//     },\r\n//     selectEmpty: {\r\n//         border: \"3px solid red\",\r\n//         // marginTop: theme.spacing(2),\r\n//     },\r\n\r\n// }));\r\n\r\n// export default function SimpleSelect() {\r\n//     const classes = useStyles();\r\n//     const [age, setAge] = React.useState('');\r\n\r\n//     const handleChange = (event) => {\r\n//         setAge(event.target.value);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n\r\n//             <FormControl\r\n//                 className={`${classes.formControl} `}\r\n//             >\r\n//                 <Select\r\n//                     value={age}\r\n//                     onChange={handleChange}\r\n//                     displayEmpty\r\n//                     //   className={classes.selectEmpty}\r\n//                     inputProps={{ 'aria-label': 'Without label' }}\r\n//                 >\r\n//                     {/* <MenuItem value=\"\" disabled>\r\n//             Placeholder\r\n//           </MenuItem> */}\r\n//                     <MenuItem value={10} default>Ten</MenuItem>\r\n//                     <MenuItem value={20}>Twenty</MenuItem>\r\n//                     <MenuItem value={30}>Thirty</MenuItem>\r\n//                 </Select>\r\n//             </FormControl>\r\n\r\n\r\n//         </>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useStore } from '../../Context'\r\nimport s from './MessagesBlock.module.scss'\r\n// import MessagesBlock from './MessagesBlock';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: 220,\r\n    background: \"#fff\",\r\n    // fontSize: '5px'\r\n  },\r\n  selectEmpty: {\r\n    font: 'Roboto',\r\n    fontSize: '14px',\r\n    background: \"#fff\",\r\n    height: '43px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: '8px',\r\n    paddingRight: '10px',\r\n    borderBottom: \"5px solid white\",\r\n\r\n\r\n    marginTop: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const store = useStore()\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    store.setchannelFilter(event.target.value)\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <Select\r\n        value={age}\r\n        onChange={handleChange}\r\n        displayEmpty\r\n        className={classes.selectEmpty}\r\n        inputProps={{ 'aria-label': 'Without label' }}\r\n      >\r\n        <MenuItem value={''} >ALL CHANNELS</MenuItem>\r\n        <MenuItem value={'VK'}>VK</MenuItem>\r\n        <MenuItem value={'FB'}>FB</MenuItem>\r\n        <MenuItem value={'OK'}>OK</MenuItem>\r\n      </Select>\r\n    </>\r\n  );\r\n}","\r\n\r\nimport React from 'react'\r\nimport s from './MessagesBlock.module.scss'\r\nimport { useStore } from '../../Context'\r\nimport { useObserver } from \"mobx-react\";\r\nimport { motion } from 'framer-motion';\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst MessageLine = React.memo(({ ms, index }) => {\r\n    const store = useStore()\r\n    const time = ms.ts.toLocaleTimeString().slice(0, -3)\r\n    const roomMessages = store.getRoomMessages()\r\n\r\n    const roomChannels = () => {\r\n        if (index >= 1) {\r\n            return roomMessages[index].channelId === roomMessages[index - 1].channelId ? true : false\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    return useObserver(() => (\r\n        <>\r\n            { !roomChannels() && <Divider channel={ms.channelId} /> }\r\n            <div className={classNames(\r\n                s.message__line,\r\n                { [s.message__line__right]: ms.sender === 'You' },\r\n            )}>\r\n                <motion.div\r\n                    className={s.message__box}\r\n                    initial={{ opacity: 0, y: '10%' }} animate={{ opacity: 1, y: '0', transition: { duration: 0.5 } }}>\r\n                    <p>{ms.body}</p>\r\n                    <span>{time}</span>\r\n                </motion.div>\r\n            </div>\r\n        </>\r\n    ))\r\n})\r\n\r\nexport default MessageLine;\r\n\r\n\r\n\r\n\r\n\r\nconst Divider = ({ channel }) => {\r\n    return (\r\n        <div className={s.divider}>\r\n            <span className={s.line}></span>\r\n            <span className={s.channelName}>{channel}</span>\r\n            <span className={s.line}></span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './MessagesBlock.module.scss'\r\nimport SimpleSelect from './Select'\r\nimport { useStore } from '../../Context'\r\nimport { useObserver } from \"mobx-react\";\r\nimport { nanoid } from 'nanoid'\r\nimport MessageLine from './MessagesLine'\r\n\r\n\r\n\r\n\r\nconst MessagesBlock = React.memo(function () {\r\n\r\n    const store = useStore()\r\n\r\n    return useObserver(() => (\r\n\r\n        <div className={s.messages__block}>\r\n            {\r\n                store.activeChat === null\r\n                    ? <>Choose a chat</>\r\n                    : <MessagesWindow />\r\n            }\r\n        </div>\r\n    ))\r\n})\r\n\r\nexport default MessagesBlock\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MessagesWindow = React.memo(function () {\r\n\r\n    const store = useStore()\r\n    const scrollTo = React.useRef()\r\n\r\n\r\n    React.useEffect(() => {\r\n        scrollTo.current.scrollIntoView({ behavior: \"smooth\" })\r\n        store.filterRecivedMessages()\r\n        return () => store.filterRecivedMessages()\r\n\r\n    }, [store.messages.length])\r\n\r\n    const [input, handleInputMessage] = React.useState('')\r\n    const roomMsgs = store.messages.filter(i => i.roomId === store.activeChat)\r\n\r\n    const submit = (event) => {\r\n        \r\n        event.preventDefault();\r\n        const newMessage = {\r\n            id: nanoid(),\r\n            roomId: store.activeChat,\r\n            channelId: store.channelFilter || roomMsgs[roomMsgs.length - 1].channelId,\r\n            sender: 'You',\r\n            body: input,\r\n            ts: new Date(),\r\n        }\r\n        handleInputMessage('')\r\n        store.pushMessage(newMessage)\r\n    }\r\n\r\n    return useObserver(() => (\r\n\r\n        <div className={s.messages__window}>\r\n            <div className={s.messages__window__head}>\r\n                <span>{store.activeChat}</span>\r\n                <SimpleSelect />\r\n            </div>\r\n\r\n            <div className={s.messages__window__body}>\r\n                {\r\n                    store.getRoomMessages().map((i, index) => <MessageLine key={i.id} ms={i} index={index} />)\r\n                }\r\n                <span ref={scrollTo}></span>\r\n            </div>\r\n            <form onSubmit={submit} action=\"\" className={s.messages__window__footer}>\r\n                <input onChange={(e) => handleInputMessage(e.target.value)}\r\n                    placeholder='Введите текст'\r\n                    value={input}\r\n                    type=\"text\" />\r\n                <button onClick={submit}>\r\n                    <Svg />\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    ))\r\n})\r\n\r\n\r\n\r\n\r\nconst Svg = () => {\r\n    return (\r\n        <svg width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M1.4 16.8849L18.85 9.40488C19.66 9.05488 19.66 7.91488 18.85 7.56488L1.4 0.0848801C0.74 -0.20512 0.00999999 0.28488 0.00999999 0.99488L0 5.60488C0 6.10488 0.37 6.53488 0.87 6.59488L15 8.48488L0.87 10.3649C0.37 10.4349 0 10.8649 0 11.3649L0.00999999 15.9749C0.00999999 16.6849 0.74 17.1749 1.4 16.8849Z\" fill=\"#083DCC\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\n","import React from 'react'\nimport './App.scss';\nimport { useStore } from './Context';\nimport { useObserver } from 'mobx-react'\nimport RoomsSidebar from './components/RoomsSidebar/RoomsSidebar';\nimport MessagesBlock from './components/MessagesBlock/MessagesBlock';\nconst loremIpsum = require('lorem-ipsum').loremIpsum;\n\n\nfunction App() {\n\n  const store = useStore()\n\n  React.useEffect(() => {\n    emit()\n  }, [])\n\n\n  let init = true;\n  let id = 0;\n  const roomIds = ['Perry the Platypus', 'Tyler Durden', 'Amy Pond', 'Le Petit Prince', 'Dr. Heinz Doofenshmirtz', 'Gregory'];\n  const channelIds = ['VK', 'OK', 'FB'];\n\n  function emit() {\n    let roomid = randomChoose(roomIds)\n    if (init) {\n      init = false;\n    } else {\n      handle({\n        id: ++id,\n        roomId: roomid ,\n        channelId: randomChoose(channelIds),\n        sender:  roomid,\n        recived: false,\n        body: loremIpsum({\n          count: randomBetween(1, 5),\n          format: 'plain',\n          units: randomChoose(['sentences', 'words']),\n        }),\n        ts: new Date(),\n      });\n    }\n    setTimeout(emit, randomBetween(3000, 6000));\n  }\n\n  function randomBetween(min, max) {\n    return Math.floor((max - min + 1) * Math.random()) + min;\n  }\n\n  function randomChoose(array) {\n    return array[randomBetween(0, array.length - 1)];\n  }\n\n  function handle(message) {\n    // FIXME Your code goes here\n    // console.log(message);\n    store.pushMessage(message)\n  }\n\n\n\n  return useObserver(() => (\n    <div className='App'>\n      <RoomsSidebar />\n      <MessagesBlock />\n    </div>\n\n  ));\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { AppProvider } from './Context';\n\nReactDOM.render(\n    <AppProvider>\n\n      <App />\n    </AppProvider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}